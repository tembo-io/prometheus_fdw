{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Prometheus FDW","text":""},{"location":"#prometheus_fdw","title":"Prometheus_fdw","text":"<p>Prometheus_fdw is an integration of Prometheus monitoring data into Postgres. It enables querying for Prometheus metrics directly within Postgres, bridging the gap between Prometheus monitoring and Postgres's robust database capabilities.  </p>"},{"location":"#pre-requisistes","title":"Pre-requisistes","text":"<ul> <li>Install <code>prometheus_fdw</code></li> <li>(Optional) install <code>pg_partman</code> and <code>pg_cron</code></li> </ul>"},{"location":"#quick-start","title":"Quick start","text":"<p><code>create extension prometheus_fdw;</code></p> <p>Create the foreign data wrapper:</p> <pre><code>create foreign data wrapper prometheus_wrapper\n  handler prometheus_fdw_handler\n  validator prometheus_fdw_validator;\n</code></pre> <p>Create the server:</p> <pre><code>create server my_prometheus_server\n  foreign data wrapper prometheus_wrapper\n  options (\n    base_url '&lt;base prometheus url&gt;');\n</code></pre> <p>Create Foreign Table:</p> <pre><code>CREATE FOREIGN TABLE IF NOT EXISTS metrics (\n  metric_name TEXT,\n  metric_labels JSONB,\n  metric_time BIGINT,\n  metric_value FLOAT8\n  )\nserver my_prometheus_server\noptions (\n  object 'metrics',\n  step '10m'\n);\n</code></pre>"},{"location":"#queries","title":"Queries","text":"<p>To simply run the fdw and look at values</p> <pre><code>SELECT\n  *\nFROM metrics\nWHERE\n  metric_name='container_cpu_usage_seconds_total'\n  AND metric_time &gt; 1696046800 AND metric_time &lt; 1696133000;\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>Please see the <code>examples/</code> directory to find a basic example and a practical example. In the practical example, metrics are automatically synced into the database using <code>pg_cron</code>, and automatically expired using <code>pg_partman</code>. Performance is optimized using indexes and partitioning.</p>"},{"location":"hello_world/basic_setup/","title":"Prometheus FDW basic demo","text":"<ul> <li>Dockerfile: A Postgres database with prometheus_fdw installed</li> <li>setup-prometheus-fdw.sql: A script to show how to configure</li> <li>sample-query.sql: A sample query against Prometheus</li> <li>run-demo.sh: A script showing the whole process of running the demo</li> </ul>"},{"location":"hello_world/practical_example/setup/","title":"Practical example","text":"<ul> <li>Dockerfile: A Postgres database with prometheus_fdw installed</li> <li>setup-prometheus-fdw.sql: A script to show how to configure</li> <li>setup-cache.sql: Setup tables for local storage of metrics data</li> <li>setup-metrics-sync.sql: Automatically sync data from Prometheus to Postgres</li> <li>run-demo.sh: A script showing the whole process of running the demo</li> </ul>"},{"location":"hello_world/practical_example/setup/#data-model","title":"Data model","text":"<p>This data model was inspired by the Crunchy Data postgresql-prometheus-adapter.</p> <p>metric_labels: Stores the metric name labels.</p> <pre><code> id |               name                 |      labels\n----+------------------------------------+-------------------------\n  1 | container_cpu_usage_seconds_total  | {\"pod\": \"my-pod-1\", ...}\n  2 | container_cpu_usage_seconds_total  | {\"pod\": \"my-pod-2\", ...}\n  3 | container_memory_working_set_bytes | {\"pod\": \"my-pod-1\", ...}\n  4 | container_memory_working_set_bytes | {\"pod\": \"my-pod-2\", ...}\n</code></pre> <p>metric_values: A partitioned table that stores metric values, when they happened, and the corresponding labels.</p> <pre><code> label_id |    time    |  value\n----------+------------+----------\n     4320 | 1702678142 | 12214272\n     4320 | 1702678742 | 11923456\n     4320 | 1702679342 | 12230656\n     4320 | 1702679942 | 11804672\n     4320 | 1702677542 | 11870208\n     4331 | 1702679942 | 53743616\n     4331 | 1702678142 | 54022144\n     4331 | 1702678742 | 53903360\n     4331 | 1702679342 | 53288960\n     4331 | 1702677542 | 53514240\n</code></pre>"},{"location":"hello_world/practical_example/setup/#example-query","title":"Example query","text":"<p>The query in sample-query.sql is an example of showing the current memory utilization of each container in kube-system.</p>"}]}